package Data.bot

import com.elbekD.bot.Bot
import com.elbekD.bot.types.InlineKeyboardButton
import com.elbekD.bot.types.InlineKeyboardMarkup
import kt.sandbox.data.Elo
import kt.sandbox.utils.database.DbConnector
import kt.sandbox.utils.database.DbProcessor
import java.util.*


open class Bot {


    val dbConnector = DbConnector()

    val adminController = AdminController()

    val token = System.getProperty("token")
    val bot = Bot.createPolling("newUflBot", token)

    fun start() {
        bot.onCommand("/start") { msg, _ ->
            bot.sendMessage(msg.chat.id, "Hello World!")
        }

        /* bot.onCommand("/set") { msg, _ ->
         bot.sendMessage(msg.chat.id, "Executing set")
         //set to database
     }

     bot.onCommand("/get") { msg, _ ->
         bot.sendMessage(msg.chat.id, "Executing get")
         //get from dbase
     }*/

        bot.onCommand("/waiver")
        { msg, _ ->
            bot.sendMessage(msg.chat.id, "Executing waiver")
            /* methods for waiver logic

            –û–±—ä—è–≤–ª—è–µ—Ç—Å—è –≤–µ–π–≤–µ—Ä —Å–æ —Å–ø–∏—Å–∫–æ–º –∏–≥—Ä–æ–∫–æ–≤
                1) –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫
                2) –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ (—Å—Å—ã–ª–∫–∏ –Ω–∞ –¥—è–¥—é)
                3) –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–∞–ø–ª–∞–∏—Ç—Å—è –Ω–∞ –∏–≥—Ä–æ–∫–∞
                    3.1 –≤ –±–∞–∑–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å–≤—è–∑—å –≤–ª–∞–¥–µ–ª–µ—Ü - –∏–≥—Ä–æ–∫
                4) –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ—á–µ—Ä–µ–¥–Ω–æ—Å—Ç—å –Ω–∞ –≤–µ–π–≤–µ—Ä–µ
                    4.1 –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å
                    4 2 –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                5) –ª–∏–º–∏—Ç –Ω–µ –±–æ–ª–µ–µ 2 –≤–µ–π–≤–µ—Ä–æ–≤ –≤ —Å–µ–∑–æ–Ω
                6) –ø–æ–±–µ–¥–∏—Ç–µ–ª—å –≤–µ–π–≤–µ—Ä–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –∫–æ–Ω–µ—Ü –æ—á–µ—Ä–µ–¥–∏
                7) –ï—Å–ª–∏ —Å–ª–µ–¥—É—é—â–∞—è –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É –∫–æ–º–∞–Ω–¥–∞ —Ö–æ—Ç–µ–ª–∞ –≤–∑—è—Ç—å –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —É—à–µ–ª, —Ç–æ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, –µ–π –¥–æ—Å—Ç–∞–µ—Ç—Å—è –≤—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫ –∏–∑ –∑–∞—è–≤–∫–∏

         */
        }

        bot.onCommand("/elo")
        { msg, _ ->
            /* methods for waiver logic
            1. –≥–µ—Ç —ç–ª–æ
            2. —Å–µ—Ç —ç–ª–æ
            3. –∞–ø–¥–µ–π—Ç —ç–ª–æ
            4. —Ñ–ª—é—à —ç–ª–æ

            –≤—Å–µ –Ω–∞—á–∏–Ω–∞—é—Ç —Å 1200 —ç–ª–æ
        */
            dbConnector.connect()
            val dbProcessor = DbProcessor(dbConnector.getConnection()!!)

            val rs = dbProcessor.executeQuery("Select name, elo from managers order by elo desc")

            val list: MutableList<String> = ArrayList<String>()

            while (rs?.next()!!) {
                list.add(Elo(rs.getInt("elo"), rs.getString("name")).toString())
            }

            bot.sendMessage(
                msg.chat.id, list.toString()
                    .replace(",", "")
                    .replace("[", "")
                    .replace("]", "")
            )


        }

        bot.onCommand("/service")
        { msg, _ ->
            bot.sendMessage(msg.chat.id, adminController.serviceStatus())
        }

        bot.onCommand("/debug")
        { msg, _ ->
            dbConnector.connect()
            val dbProcessor = DbProcessor(dbConnector.getConnection()!!)
            val teamsRS = dbProcessor.executeQuery("SELECT * FROM teams")
            val managersRS = dbProcessor.executeQuery("SELECT * FROM managers")


            println(teamsRS?.getString(1))
            println(managersRS?.getString(1))

        }

        bot.onCommand("/db_execute") { msg, _ ->
            dbConnector.connect()
            val dbProcessor = DbProcessor(dbConnector.getConnection()!!)

            val query: String = msg.text?.split(" ", limit = 2)?.get(1) ?: ""

            val teamsRS = dbProcessor.executeQuery(query.toString())

            println(teamsRS?.getString(2))
        }

        bot.onCallbackQuery("like") {
            var like = Integer.parseInt(
                it.message!!.reply_markup!!.inline_keyboard[0][0].text.split(" ")[1]
            )
            like += 1
            bot.editMessageReplyMarkup(
                chatId = it.message?.chat?.id, messageId = it.message?.message_id, markup = InlineKeyboardMarkup(
                    listOf(
                        listOf(
                            InlineKeyboardButton("üëç $like", callback_data = "like"),
                            it.message!!.reply_markup!!.inline_keyboard[0][1],
                            it.message!!.reply_markup!!.inline_keyboard[0][2]
                        )
                    )
                )
            )
        }
        bot.onCallbackQuery("dislike") {
            var like = Integer.parseInt(
                it.message!!.reply_markup!!.inline_keyboard[0][1].text.split(" ")[1]
            )
            like += 1
            bot.editMessageReplyMarkup(
                chatId = it.message?.chat?.id, messageId = it.message?.message_id, markup = InlineKeyboardMarkup(
                    listOf(
                        listOf(
                            it.message!!.reply_markup!!.inline_keyboard[0][0],
                            InlineKeyboardButton("üëé $like", callback_data = "dislike"),
                            it.message!!.reply_markup!!.inline_keyboard[0][2]
                        )
                    )
                )
            )
        }
        bot.onCallbackQuery("bue") {
            var like = Integer.parseInt(
                it.message!!.reply_markup!!.inline_keyboard[0][2].text.split(" ")[1]
            )
            like += 1
            bot.editMessageReplyMarkup(
                chatId = it.message?.chat?.id, messageId = it.message?.message_id, markup = InlineKeyboardMarkup(
                    listOf(
                        listOf(
                            it.message!!.reply_markup!!.inline_keyboard[0][0],
                            it.message!!.reply_markup!!.inline_keyboard[0][1],
                            InlineKeyboardButton("ü§¢ $like", callback_data = "bue")
                        )
                    )
                )
            )
        }

        bot.start()
    }
}